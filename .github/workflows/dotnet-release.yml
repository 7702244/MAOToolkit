# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ "main" ]
  pull_request:
    types: [closed]
    branches: [ "main" ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Project name to pack and publish
  PROJECT_NAME: MAOToolkit
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/7702244/index.json
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'src/MAOToolkit.sln'
      
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
        
      - name: Restore dependencies
        run: dotnet restore $SOLUTION
        
      - name: Build
        run: dotnet build $SOLUTION --configuration $BUILD_CONFIG --no-restore
        
      - name: Test
        run: dotnet test $SOLUTION /p:Configuration=$BUILD_CONFIG --no-restore --no-build --verbosity normal
        
      - name: Create the package
        run: dotnet pack $SOLUTION --configuration $BUILD_CONFIG
        
      - name: Publish the package to GitHub Feed
        run: dotnet nuget push **\*.nupkg -Source $GITHUB_FEED -ApiKey $GITHUB_TOKEN
        
      - name: Publish the package to NuGet Feed
        run: dotnet nuget push **\*.nupkg -Source $NUGET_FEED -ApiKey $NUGET_KEY
